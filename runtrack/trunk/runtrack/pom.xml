<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.cloudme.runtrack</groupId>
  <artifactId>runtrack</artifactId>
  <packaging>war</packaging>
  <version>1.0.0</version>
  <name>Runtrack</name>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <gae.version>1.3.3.1</gae.version>
  </properties>
  <developers>
    <developer>
      <id>moritz</id>
      <name>Moritz Petersen</name>
      <email>moritz@cloudme.org</email>
      <url>http://cloudme.org/u/moritz</url>
    </developer>
  </developers>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>

      <!-- Compiles your custom GWT components with the GWT compiler -->
      <!--
        A hosted mode browser for client-side widget debugging can be
        run with the goal gwt:run after uncommenting the correct line
        below. A remote debugger can then be connected to port 8998.
        Note that e.g. a Jetty server should be running with the server
        side parts - use the goal jetty:run .
      -->
      <!--
        A simple Jetty test server at http://localhost:8080/runtrack can
        be launched with the Maven goal jetty:run and stopped with
        jetty:stop
      -->

      <!-- Google Appengine plugins (except Datanucleus) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1-beta-1</version>
        <configuration>
          <webResources>
            <resource>
              <directory>src/main/webapp</directory>
              <filtering>true</filtering>
              <includes>
                <include>**/appengine-web.xml</include>
              </includes>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <!--
        The actual maven-gae-plugin. Type "mvn gae:run" to run project,
        "mvn gae:deploy" to upload to GAE.
      -->
      <plugin>
        <groupId>net.kindleit</groupId>
        <artifactId>maven-gae-plugin</artifactId>
        <version>0.5.7</version>
      </plugin>
      <!--
        Upload application to the appspot automatically, during
        release:perform
      -->
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <goals>gae:deploy</goals>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.twdata.maven</groupId>
        <artifactId>maven-cli-plugin</artifactId>
        <version>1.0.3</version>
      </plugin>
    </plugins>
  </build>
  <repositories>
    <repository>
      <id>cloudme</id>
      <url>http://cloudme.googlecode.com/svn/maven/</url>
    </repository>
    <repository>
      <id>mvnsearch.org</id>
      <name>MVN Search</name>
      <url>http://www.mvnsearch.org/maven2</url>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>maven-gae-plugin-repo</id>
      <name>maven-gae-plugin repository</name>
      <url>http://maven-gae-plugin.googlecode.com/svn/repository</url>
    </repository>
    <repository>
      <id>twig</id>
      <url>http://mvn.twig-persist.googlecode.com/hg</url>
    </repository>
    <repository>
    	<id>objectify-appengine</id>
    	<url>http://objectify-appengine.googlecode.com/svn/maven</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>mojo-snapshots</id>
      <url>http://snapshots.repository.codehaus.org/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
    <pluginRepository>
      <id>maven-gae-plugin-repo</id>
      <name>maven-gae-plugin repository</name>
      <url>http://maven-gae-plugin.googlecode.com/svn/repository</url>
    </pluginRepository>
    <pluginRepository>
      <id>twdata-m2-repository</id>
      <name>twdata.org Maven 2 Repository</name>
      <url>http://twdata-m2-repository.googlecode.com/svn/</url>
    </pluginRepository>
  </pluginRepositories>
  <dependencies>
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-1.0-sdk</artifactId>
      <version>${gae.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-labs</artifactId>
      <version>${gae.version}</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-stubs</artifactId>
      <version>${gae.version}</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-testing</artifactId>
      <version>${gae.version}</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
<!--    <dependency>-->
<!--      <groupId>com.google.appengine</groupId>-->
<!--      <artifactId>appengine-local-runtime</artifactId>-->
<!--      <version>${gae.version}</version>-->
<!--      <scope>test</scope>-->
<!--    </dependency>-->
    <dependency>
      <groupId>com.vercer.engine.persist</groupId>
      <artifactId>twig-persist</artifactId>
      <version>1.0.1</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.stripes</groupId>
      <artifactId>stripes</artifactId>
      <version>1.5.2</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>junit</groupId>
    	<artifactId>junit</artifactId>
    	<version>4.8.1</version>
    	<type>jar</type>
    	<scope>test</scope>
    </dependency>
    <dependency>
    	<groupId>com.googlecode.objectify</groupId>
    	<artifactId>objectify</artifactId>
    	<version>2.2</version>
    </dependency>
    <dependency>
    	<groupId>javax.persistence</groupId>
    	<artifactId>persistence-api</artifactId>
    	<version>1.0</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
  </dependencies>
</project>