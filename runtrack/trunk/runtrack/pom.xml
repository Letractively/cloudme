<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.cloudme.runtrack</groupId>
  <artifactId>runtrack</artifactId>
  <packaging>war</packaging>
  <version>1.0.0</version>
  <name>Vaadin Web Application</name>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <gae.version>1.3.2</gae.version>
  </properties>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>

      <!-- Compiles your custom GWT components with the GWT compiler -->
      <!--
        A hosted mode browser for client-side widget debugging can be
        run with the goal gwt:run after uncommenting the correct line
        below. A remote debugger can then be connected to port 8998.
        Note that e.g. a Jetty server should be running with the server
        side parts - use the goal jetty:run .
      -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>1.3-SNAPSHOT</version>
        <executions>
          <execution>
            <configuration>
              <!-- if you don't specify any modules, the plugin will find them -->
              <!--
                <modules>
                <module>org.cloudme.runtrack.gwt.ColorPickerWidgetSet</module>
                </modules>
              -->
              <webappDirectory>${project.build.directory}/${project.build.finalName}/VAADIN/widgetsets</webappDirectory>
              <!-- On Mac running Snow Leopard, add "-d32" -->
              <!--
                This causes error messages (but build works) in phase
                "package": two processes would use the same debug port
              -->
              <!--
                extraJvmArgs>-Xmx512M -Xss1024k -Xdebug
                -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8998</extraJvmArgs
              -->
              <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
              <runTarget>runtrack</runTarget>
              <hostedWebapp>${project.build.directory}/${project.build.finalName}</hostedWebapp>
              <noServer>true</noServer>
              <port>8080</port>
            </configuration>
            <goals>
              <goal>resources</goal>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <configuration>
              <!-- if you don't specify any modules, the plugin will find them -->
              <!--
                <modules>
                <module>org.cloudme.runtrack.gwt.ColorPickerWidgetSet</module>
                </modules>
              -->
            </configuration>
            <goals>
              <goal>update-widgetset</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!--
        A simple Jetty test server at http://localhost:8080/runtrack can
        be launched with the Maven goal jetty:run and stopped with
        jetty:stop
      -->
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <version>6.1.19</version>
        <configuration>
          <stopPort>9966</stopPort>
          <stopKey>runtrack</stopKey>
          <!--
            Redeploy every x seconds if changes are detected, 0 for no
            automatic redeployment
          -->
          <scanIntervalSeconds>0</scanIntervalSeconds>
          <!-- make sure Jetty also finds the widgetset -->
          <webAppConfig>
            <contextPath>/runtrack</contextPath>
            <baseResource
              implementation="org.mortbay.resource.ResourceCollection">
              <!--
                Workaround for Maven/Jetty issue
                http://jira.codehaus.org/browse/JETTY-680
              -->
              <!--
                <resources>src/main/webapp,${project.build.directory}/${project.build.finalName}</resources>
              -->
              <resourcesAsCSV>src/main/webapp,${project.build.directory}/${project.build.finalName}</resourcesAsCSV>
            </baseResource>
          </webAppConfig>
        </configuration>
      </plugin>

      <!-- Google Appengine plugins (except Datanucleus) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1-beta-1</version>
        <configuration>
          <webResources>
            <resource>
              <directory>src/main/webapp</directory>
              <filtering>true</filtering>
              <includes>
                <include>**/appengine-web.xml</include>
              </includes>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <!--
        The actual maven-gae-plugin. Type "mvn gae:run" to run project,
        "mvn gae:deploy" to upload to GAE.
      -->
      <plugin>
        <groupId>net.kindleit</groupId>
        <artifactId>maven-gae-plugin</artifactId>
        <version>0.5.7</version>
      </plugin>
      <!--
        Upload application to the appspot automatically, during
        release:perform
      -->
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <goals>gae:deploy</goals>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <repositories>
    <repository>
      <id>vaadin-snapshots</id>
      <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>cloudme</id>
      <url>http://cloudme.googlecode.com/svn/maven/</url>
    </repository>
    <!--    <repository>-->
    <!--      <id>mvnsearch.org</id>-->
    <!--      <name>MVN Search</name>-->
    <!--      <url>http://www.mvnsearch.org/maven2</url>-->
    <!--      <releases>-->
    <!--        <enabled>true</enabled>-->
    <!--        <updatePolicy>never</updatePolicy>-->
    <!--        <checksumPolicy>warn</checksumPolicy>-->
    <!--      </releases>-->
    <!--      <snapshots>-->
    <!--        <enabled>false</enabled>-->
    <!--      </snapshots>-->
    <!--    </repository>-->
    <!--    <repository>-->
    <!--      <id>maven-gae-plugin-repo</id>-->
    <!--      <name>maven-gae-plugin repository</name>-->
    <!--
      <url>http://maven-gae-plugin.googlecode.com/svn/repository</url>
    -->
    <!--    </repository>-->
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>mojo-snapshots</id>
      <url>http://snapshots.repository.codehaus.org/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
    <pluginRepository>
      <id>vaadin-snapshots</id>
      <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
    <pluginRepository>
      <id>maven-gae-plugin-repo</id>
      <name>maven-gae-plugin repository</name>
      <url>http://maven-gae-plugin.googlecode.com/svn/repository</url>
    </pluginRepository>
    <pluginRepository>
    	<id>twdata-m2-repository</id>
    	<name>twdata.org Maven 2 Repository</name>
    	<url>http://twdata-m2-repository.googlecode.com/svn/</url>
    </pluginRepository>
  </pluginRepositories>
  <dependencies>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin</artifactId>
      <version>6.3.0</version>
    </dependency>
    <!--
      This is also used by gwt-maven-plugin to deduce GWT version
      number.
    -->
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>2.0.3</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-touchkit</artifactId>
      <version>1.0.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-1.0-sdk</artifactId>
      <version>${gae.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
  </dependencies>
</project>